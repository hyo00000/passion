## 문제 정보
-noj.am/4447
-난이도: medium

## 문제 설명
각 줄마다 히어로의 이름과 하나의 공백을 사이로 "is"를 출력한다.
그리고 히어로 이름에 있는 'g'와 'b'의 개수에 따라 "g"가 더 많으면 "GOOD", "b"가 더 많으면 "A BADDY", 둘의 개수가 같으면 "NEUTRAL"을 출력한다.
* 첫 줄에 테스트케이스 n(n > 0)이 주어진다.
(그 다음 줄부터 n개에 걸쳐 이름들이 주어지며 적어도 1개의 문자를 포함하고 25자를 넘지 않는다.)
(이름은 대소문자와 공백만 주어진다. 공백은 여러 개의 단어를 가진 이름을 구분짓기 위해 사용된다.)

<예제 입력>
8
Algorithm Crunching Man
Green Lantern
Boba Fett
Superman
Batman
Green Goblin
Barney
Spider Pig

<예제 출력>
Algorithm Crunching Man is GOOD
Green Lantern is GOOD
Boba Fett is A BADDY
Superman is NEUTRAL
Batman is A BADDY
Green Goblin is GOOD
Barney is A BADDY
Spider Pig is GOOD

## 해결 과정
알고리즘 "탐색"을 이용해 문제를 풀어본다.

### 접근 방법
1. "g"와 "b"의 개수를 세어 if문을 이용해 "GOOD", "A BADDY", "NEUTRAL"을 반환하는 함수 words를 만든다.
2. 테스트케이스 n을 주어진다.
3. for문을 통해 히어로의 이름을 입력받고 입력받은 히어로의 이름을 words함수에 전달해 나온 결과를 print문으로 출력한다.

## 코드
def words(hero_name: str) -> str:
    count_g = hero_name.count('g') + hero_name.count('G')
    count_b = hero_name.count('b') + hero_name.count('B')
    if count_g > count_b:
        return "GOOD"
    elif count_g < count_b:
        return "A BADDY"
    else:
        return "NEUTRAL"

n = int(input())

for i in range(n):
    hero_name = input()
    print(hero_name, "is", words(hero_name))
